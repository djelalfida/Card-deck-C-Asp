@page "/deck"
@page "/deck/{pagenumber?}"

<h1>@title</h1>

@if (message.Length > 0)
{
    <p>@message</p>
}

<div class="filters">
    <label for="sort">Sort by name:</label>
    <select id="sort" @onchange="SortCards">
        <option value="asc" selected="@(SelectedSorting == "asc" ? true : false)">Ascending</option>
        <option value="desc" selected="@(SelectedSorting == "desc" ? true : false)">Descending</option>
    </select>

    <label for="name">Search by name:</label>
    <input id="name" type="text" @onchange="FindCardByName" placeholder="Ancestor's Chosen" />

    <label for="artist">Search by artist @ArtistFilter:</label>
    <select id="artist" @onchange="FindCardByArtist">
        <option value="">All</option>
        @if (_artists != null)
        {
            @foreach (ArtistReadDTO artist in _artists)
            {
                <option value="@artist.Id">@artist.FullName</option>
            }
        }
    </select>

    <label for="rarity">Filter by rarity:</label>
    <select id="rarity" @onchange="FilterCardByRarity">
        <option value="">All</option>
        @if (_rarities != null)
        {
            @foreach (RarityReadDTO rarity in _rarities)
            {
                <option value="@rarity.Code">@rarity.Name</option>
            }
        }
        
    </select>
</div>

<h1>@_deckName</h1>

@if (_selectedCards.Count == MaxSelectedCards)
{
    <input id="deck-name" type="text" placeholder="Deck name" @bind="_deckName" />
    <button @onclick="CreateDeck" @onclick:preventDefault="true">Save Deck</button>
}


@if (_cards == null)
{
    <p>Loading ...</p>
} else
{
    <a href="#" @onclick="NextPage" @onclick:preventDefault="true">Next Page @pageNumber</a>
    
    @if (pageNumber != null)
    {
        <a href="#" @onclick="PreviousPage" @onclick:preventDefault="true">Previous Page @((Convert.ToInt16(pageNumber) - 1).ToString())</a>
    }
    
    
    
    <div class="card-selection">
        <div class="cards">
            @foreach(CardReadDTO card in _cards)
            {
                <a href="#" @onclick="@(() => SelectCard(card))" @onclick:preventDefault="true">
                    <img class="card-img" src="@card.OriginalImageUrl" alt="@card.Name" />
                </a>
            }
        </div>
        <div class="selected-cards">
            <h2>Selected cards (@(_selectedCards.Count)/@MaxSelectedCards)</h2>
            <a href="" @onclick="() => _selectedCards.Clear()" @onclick:preventDefault="true">Clear selection</a>
            <ul>
                    @foreach (CardReadDTO card in _selectedCards)
                    {
                        <li><a href="#" @onclick="@(() => SelectCard(card))" @onclick:preventDefault="true">@card.Name</a></li>
                    }
            </ul>
        </div>
    </div>
}

<div class="created-decks">
    <h2>Created decks</h2>
    
    <label for="decks">Select a deck:</label>
    <select @bind="_deck" id="decks">
        @if (_decks != null)
        {
             <option value="">Select a deck</option>
            @foreach (DeckReadDTO deck in _decks)
            {
                <option value="@deck.Name">@deck.Name</option>
            }
        }
    </select>
    <a href="" @onclick="DeleteDeck" @onclick:preventDefault="true">Delete selected deck (@_deck)</a>
    
    @if (_deck.Length > 0 && _deck != string.Empty)
    {
        DeckReadDTO deck = _decks.FirstOrDefault(d => d.Name == _deck);
        <ul id="current-deck">
            @foreach (CardReadDTO card in deck.Cards)
            {
                <li>@card.Name</li>
            }
        </ul>
    }

</div>